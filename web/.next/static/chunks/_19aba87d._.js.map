{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/volodymyrpaslavskyy/projects/bots-duel/web/types/Message.ts"],"sourcesContent":["import { Tournament } from \"./Tournament\"\nimport { Coord } from \"./Coord\"\n\nexport enum Result {\n  WIN = 1,\n  LOSS = -1,\n  DRAW = 0\n};\n\nexport enum Winner {\n  ME = 'me',\n  OPP = 'opp',\n  DRAW = 'draw',\n}\n\nexport type GameResolution = {\n  me: number,\n  opp: number,\n  winner: Winner | null\n};\n\nexport type JoinTournamentEvent = {\n  type: 'JoinTournament'\n  tournament: Tournament\n};\n\nexport type CreateTournamentEvent = {\n  type: 'CreateTournament'\n  tournament: Tournament\n};\n\nexport type NotifyTournamentEvent = {\n  type: 'NotifyTournament'\n  tournament: Tournament\n};\n\nexport type TournamentMoveDoneEvent = {\n  type: 'TournamentMoveDone'\n  tournament: Tournament\n  move: Coord\n  grid?: number[]\n  resolution?: GameResolution\n};\n\nexport type TournamentFinishedEvent = {\n  type: 'TournamentFinished'\n  tournament: Tournament\n  winner: string\n};\n\nexport type TournamentAskForCoordEvent = {\n  type: 'TournamentAskForCoord'\n  tournament: Tournament,\n  coord?: Coord\n};\n\nexport type TournamentTrainBotEvent = {\n  type: 'TournamentTrainBot'\n  tournament: Tournament\n};\n\nexport type TournamentEvents = (\n  JoinTournamentEvent | CreateTournamentEvent | NotifyTournamentEvent |\n  TournamentMoveDoneEvent | TournamentFinishedEvent | TournamentAskForCoordEvent | TournamentTrainBotEvent\n);\n\nexport type EventType = TournamentEvents['type'];\n"],"names":[],"mappings":";;;;;;AAGO,IAAA,AAAK,gCAAA;;;;WAAA;;AAML,IAAA,AAAK,gCAAA;;;;WAAA","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/volodymyrpaslavskyy/projects/bots-duel/web/components/GameDashboard.tsx"],"sourcesContent":["'use client'\nimport { useBots } from '@/contexts/BotsContext'\nimport { useTournaments } from '@/contexts/TournamentsContext'\nimport { Bot, BotType } from '@/types/Bot'\nimport { Coord } from '@/types/Coord'\nimport { Result, TournamentAskForCoordEvent, TournamentMoveDoneEvent, Winner } from '@/types/Message'\nimport { GRID_COLS, GRID_ROWS, Tournament, TournamentStatus } from '@/types/Tournament'\nimport Konva from 'konva'\nimport { useRouter } from 'next/navigation'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Rect as KRect, Layer, Stage } from 'react-konva'\n\nconst CELL_SIZE = 13;\nconst GAME_WIDTH = GRID_COLS * CELL_SIZE;\nconst GAME_HEIGHT = GRID_ROWS * CELL_SIZE;\nconst DEFAULT_FILL = '#9ca3af';\nconst CELL_BORDER = '#374151';\nconst CELL_BORDER_WIDTH = 0.5;\nexport const MY_TURN_COLOR = '#ef4444';\nexport const OPP_TURN_COLOR = '#3b82f6';\nconst COLOR_BY_VAL: Record<number, string> = {\n  1: MY_TURN_COLOR,\n  2: OPP_TURN_COLOR,\n  3: '#111827', // occupied but empty cell\n  4: '#7c3aed', // my captured cell\n  5: '#6d28d9', // opponent captured cell\n};\n\nconst cellId = (x: number, y: number) => y * GRID_COLS + x;\n\ntype Caps = {\n  myCaptures: number;\n  oppCaptures: number;\n};\n\ntype GameDashboardProps = {\n  initialTournament: Tournament\n  currentBot: Bot\n}\n\nexport function GameDashboard({ initialTournament, currentBot }: GameDashboardProps) {\n  // 0=empty, 1=my, 2=opponent\n  const { onMessage, sendWebSocketMessage } = useBots();\n  const { currentTournament, setCurrentTournament, setTournaments } = useTournaments();\n  const router = useRouter();\n  const [currentOpponent, setCurrentOpponent] = useState<Bot | null>(initialTournament.owner.id === currentBot.id ? null : initialTournament.owner);\n  const [currentPlayer, setCurrentPlayer] = useState<Bot>(initialTournament.owner);\n  const rectRefsRef = useRef<Array<Konva.Rect | null>>([]);\n  const layerRef = useRef<Konva.Layer>(null);\n  const [toast, setToast] = React.useState<{ title: string }>({ title: '' });\n  const [finished, setFinished] = React.useState<boolean>(false);\n  const [botIsTraining, setBotIsTraining] = React.useState<boolean>(false);\n  const finishedRef = React.useRef<boolean>(false);\n  const capsRef = useRef<Caps>({ myCaptures: 0, oppCaptures: 0 });\n  const oppRef = useRef<Bot | null>(\n    initialTournament.owner.id === currentBot.id ? null : initialTournament.owner\n  );\n\n  const showGameOverToast = (winner: Winner) => {\n    let title = `Draw ${capsRef.current.myCaptures}:${capsRef.current.oppCaptures}`;\n    if (winner === Winner.ME) {\n      title = `You win ${capsRef.current.myCaptures}:${capsRef.current.oppCaptures}`;\n    } else if (winner === Winner.OPP) {\n      title = `You lose ${capsRef.current.myCaptures}:${capsRef.current.oppCaptures}`;\n    }\n    setToast({ title });\n  };\n\n  const applyGrid = React.useCallback((grid: number[]) => {\n    const n = Math.min(grid.length, GRID_ROWS * GRID_COLS);\n    for (let i = 0; i < n; i++) {\n      const v = grid[i];\n      if (v === 0) continue;\n      const rect = rectRefsRef.current[i];\n      if (!rect) continue;\n      const color = COLOR_BY_VAL[v];\n      if (color) rect.setAttrs({ fill: color, listening: false });\n    }\n    layerRef.current?.batchDraw();\n  }, []);\n\n  const onCellClick = (e: Konva.KonvaEventObject<MouseEvent>) => {\n    if (finishedRef.current) return;\n\n    const node = e.target;\n    if (!node || node.getClassName() !== 'Rect') return;\n    if (currentTournament?.status !== 'active') return;\n    if (!currentBot || !currentPlayer) return;\n    if (currentPlayer.id !== currentBot.id) return;\n    if (currentBot.type === BotType.AUTO) return;\n\n    const rect = node as Konva.Rect;\n    const [sx, sy] = (rect.name() || '').split('-');\n    const gx = parseInt(sx, 10), gy = parseInt(sy, 10);\n\n    setCurrentPlayer(oppRef.current!);\n    rect.setAttrs({ fill: MY_TURN_COLOR, listening: false });\n    layerRef.current?.batchDraw();\n\n    sendWebSocketMessage({\n      type: 'TournamentMoveDone',\n      tournament: { ...currentTournament, bot: currentBot },\n      move: [gx, gy],\n    });\n  };\n\n  const cells = useMemo(() => {\n    const arr: React.ReactNode[] = []\n    for (let y = 0; y < GRID_ROWS; y++) {\n      for (let x = 0; x < GRID_COLS; x++) {\n        arr.push(\n          <KRect\n            key={`${x}-${y}`}\n            name={`${x}-${y}`}\n            x={x * CELL_SIZE}\n            y={y * CELL_SIZE}\n            width={CELL_SIZE}\n            height={CELL_SIZE}\n            fill={DEFAULT_FILL}\n            stroke={CELL_BORDER}\n            strokeWidth={CELL_BORDER_WIDTH}\n            ref={(node) => { if (rectRefsRef.current) rectRefsRef.current[cellId(x, y)] = node }}\n          />\n        )\n      }\n    }\n    return arr\n  }, [])\n\n  useEffect(() => { oppRef.current = currentOpponent }, [currentOpponent]);\n  useEffect(() => { finishedRef.current = finished }, [finished]);\n  useEffect(() => {\n    const unJoin = onMessage('JoinTournament', (message) => {\n      if (finishedRef.current) return;\n      setCurrentTournament(message.tournament);\n      setCurrentOpponent(message.tournament.bot);\n      if (currentBot.type === BotType.AUTO) {\n        sendWebSocketMessage({\n          type: 'TournamentAskForCoord',\n          tournament: { ...message.tournament, bot: currentBot }\n        });\n      }\n    });\n    const unMove = onMessage('TournamentMoveDone', (message) => {\n      if (finishedRef.current) return;\n      // TODO. Fix this cast one day.\n      const { tournament, grid, resolution } = message as TournamentMoveDoneEvent;\n\n      setCurrentTournament(tournament);\n      setCurrentPlayer(currentBot.id === tournament.bot.id ? oppRef.current! : currentBot);\n      applyGrid(grid || []);\n\n      if (resolution) {\n        const { me, opp, winner } = resolution;\n        capsRef.current.myCaptures = me;\n        capsRef.current.oppCaptures = opp;\n        if (winner) {\n          showGameOverToast(winner);\n          sendWebSocketMessage({\n            type: 'TournamentFinished',\n            tournament: { ...tournament, bot: currentBot },\n            winner: winner === Winner.DRAW ? \"\" : winner === Winner.ME ? currentBot.id : oppRef.current!.id\n          });\n          setFinished(true);\n        }\n      }\n\n      if (currentBot.type === BotType.AUTO && currentBot.id !== tournament.bot.id) {\n        if (finishedRef.current) return;\n        sendWebSocketMessage({\n          type: 'TournamentAskForCoord',\n          tournament: { ...message.tournament, bot: currentBot }\n        });\n      }\n    });\n    const unAsk = onMessage('TournamentAskForCoord', (message) => {\n      if (finishedRef.current) return;\n      // TODO. Fix this cast one day.\n      const { coord } = message as TournamentAskForCoordEvent;\n      const [gx, gy] = coord as Coord;\n      sendWebSocketMessage({\n        type: 'TournamentMoveDone',\n        tournament: { ...message.tournament, bot: currentBot },\n        move: [gx, gy]\n      });\n    });\n    return () => {\n      // TODO. Let's think on events like opponent left tournament etc.\n      // TODO. Add button train bot on tournament end. please it next to back to tournaments button\n      // TODO. We need to fix the issue when opponent joins before owner, then all schema goes crazy\n      unMove();\n      unAsk();\n      unJoin();\n    }\n  }, [applyGrid, currentBot, onMessage, sendWebSocketMessage, setCurrentTournament]);\n\n  return (\n    <div className=\"min-h-screen w-full bg-gray-950 text-gray-100\">\n      <div className=\"p-4 grid grid-cols-1 lg:grid-cols-[clamp(260px,24vw,320px)_minmax(0,1fr)] gap-4\">\n        {/* Sidebar */}\n        <aside className=\"rounded-2xl border border-white/10 bg-gray-900/60 shadow-lg p-4\n                         h-[min(80vh,calc(100vh-48px))] flex flex-col gap-4\">\n\n          <div className=\"grid grid-cols-1 gap-3\">\n            {/* Current player card */}\n            <div\n              className={`rounded-2xl border border-white/10 bg-gradient-to-b from-gray-800/80 to-gray-800/40 p-3 shadow\n              ${currentPlayer?.id === currentBot.id ? 'ring-2 ring-red-400/30' : ''}`}\n            >\n              <div className=\"flex w-full items-center gap-2 flex-wrap\">\n                <span className={`flex-auto min-w-0 text-base font-semibold truncate\n                  ${currentPlayer?.id === currentBot.id ? 'text-red-400' : 'text-red-300'}`}>\n                  {currentBot.id}\n                </span>\n                {currentPlayer?.id === currentBot.id && (\n                  <span className=\"flex-none text-[10px] px-2 py-0.5 rounded-full border border-red-400/30 bg-red-500/10 text-red-300\">\n                    turn\n                  </span>\n                )}\n              </div>\n\n              {/* Mini stats — stack on narrow */}\n              <div className=\"mt-3 text-xs\">\n                <div className=\"rounded-lg bg-white/5 border border-white/10 px-2 py-1.5 flex items-center justify-between\">\n                  <span className=\"opacity-70\">Captures</span>\n                  <span className=\"tabular-nums text-red-300 font-medium\">{capsRef.current.myCaptures}</span>\n                </div>\n              </div>\n            </div>\n\n            {/* Opponent card */}\n            <div\n              className={`rounded-2xl border border-white/10 bg-gradient-to-b from-gray-800/80 to-gray-800/40 p-3 shadow\n              ${currentPlayer?.id === currentOpponent?.id ? 'ring-2 ring-blue-400/30' : ''}`}\n            >\n              <div className=\"flex w-full items-center gap-2 flex-wrap\">\n                <span className={`flex-auto min-w-0 text-base font-semibold truncate\n                  ${currentPlayer?.id === currentOpponent?.id ? 'text-blue-400' : 'text-blue-300'}`}>\n                  {currentOpponent?.id ?? 'waiting...'}\n                </span>\n                {currentPlayer?.id === currentOpponent?.id && (\n                  <span className=\"flex-none text-[10px] px-2 py-0.5 rounded-full border border-blue-400/30 bg-blue-500/10 text-blue-300\">\n                    turn\n                  </span>\n                )}\n              </div>\n\n              {/* Mini stats — stack on narrow */}\n              <div className=\"mt-3 text-xs\">\n                <div className=\"rounded-lg bg-white/5 border border-white/10 px-2 py-1.5 flex items-center justify-between\">\n                  <span className=\"opacity-70\">Captures</span>\n                  <span className=\"tabular-nums text-blue-300 font-medium\">{capsRef.current.oppCaptures}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </aside>\n        {/* Board */}\n        <main className=\"rounded-2xl border border-white/10 bg-gray-900/60 shadow-xl p-4 relative overflow-hidden\n                 h-[min(80vh,calc(100vh-48px))] flex flex-col\">\n          <div className=\"flex-1 flex items-center justify-center overflow-auto\">\n            <Stage width={GAME_WIDTH} height={GAME_HEIGHT}>\n              <Layer ref={layerRef} onClick={onCellClick}>\n                {cells}\n              </Layer>\n            </Stage>\n          </div>\n\n          {finished && (\n            <div className=\"pointer-events-none absolute top-3 inset-x-0 z-20 flex justify-center\">\n              <div className=\"pointer-events-auto flex items-center gap-3 rounded-full border border-white/10 bg-gray-900/95\n                      px-4 py-2 shadow-lg backdrop-blur supports-[backdrop-filter]:backdrop-blur-sm\">\n                <div className=\"flex items-baseline gap-2 min-w-0\">\n                  <span className=\"text-sm font-semibold truncate\">{toast.title}</span>\n                </div>\n                <button\n                  type=\"button\"\n                  disabled={botIsTraining}\n                  onClick={() => {\n                    if (currentTournament) {\n                      setBotIsTraining(true);\n                      sendWebSocketMessage({\n                        type: \"TournamentTrainBot\",\n                        tournament: { ...currentTournament, bot: currentBot },\n                      });\n                    }\n                  }}\n                  className=\"ml-1 inline-flex items-center rounded-md border border-white/10 bg-white/10 px-3 py-1.5 text-xs\n                            hover:bg-white/15 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {botIsTraining ? (\n                    <>\n                      <span className=\"mr-1 inline-block h-3 w-3 animate-spin rounded-full border-2 border-white border-t-transparent\"></span>\n                      Training...\n                    </>\n                  ) : (\n                    \"Train bot\"\n                  )}\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (currentTournament) {\n                      setTournaments(prev =>\n                        prev.map(t => t.id === currentTournament.id ? { ...t, participants: [], status: TournamentStatus.COMPLETED } : t)\n                      );\n                    }\n                    setCurrentTournament(null);\n                    router.push('/');\n                  }}\n                  className=\"ml-1 inline-flex items-center rounded-md border border-white/10 bg-white/10 px-3 py-1.5 text-xs\n                     hover:bg-white/15\"\n                >\n                  Back to tournaments\n                </button>\n              </div>\n            </div>\n          )}\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}